{"version":3,"sources":["assets/images/mesos.png","assets/images/helper.png","hooks/NotificationContext.ts","components/ColoredSnackbarContent.tsx","components/NotificationBar.tsx","components/LeftToolbar.tsx","errors.ts","services/MesosTerm.ts","hooks/MemoizedCallback.ts","components/XTerm.tsx","components/DelegationFormDialog.tsx","components/AccessRequestDialog.tsx","views/TerminalView.tsx","views/SandboxView.tsx","Layout.tsx","views/MainView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","defaultOptions","NotificationsContext","createContext","notification","setNotification","useNotifications","useNotificationsProps","useContext","notificationBuilder","level","message","timeout","targetTimeout","undefined","createInfoNotification","useCallback","createSuccessNotification","createWarnNotification","createErrorNotification","isActive","resetNotification","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","levelClassName","props","classes","useStyles","Icon","className","variant","others","SnackbarContent","classnames","icon","iconVariant","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","fontSize","opacity","marginRight","spacing","display","alignItems","color","useState","tmpNotification","setTmpNotification","useEffect","shouldSnackbarBeOpen","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","onExited","ColoredSnackbarContent","history","useHistory","id","root","Fab","size","button","onClick","push","taskID","faTerminal","faFolderOpen","flexDirection","alignContent","paddingTop","marginBottom","background","paper","UnauthorizedAccessError","Object","setPrototypeOf","prototype","Error","TaskNotFoundError","postCreateTerminal","accessToken","a","async","url","Axios","post","validateStatus","code","withCredentials","res","status","data","postResizeTerminal","token","rows","cols","postGenerateDelegationToken","request","getConfig","get","browseSandbox","path","encodeURIComponent","readSandboxFile","offset","downloadSandboxFile","directory","headers","responseType","useMemoizedCallback","callback","inputs","callbackRef","React","useRef","memoizedCallback","current","updatedCallback","isFocused","terminalDivRef","timer","fitAddon","FitAddon","websocket","dimension","setDimension","WebSocket","CLOSED","websocketState","setWebsocketState","location","useLocation","queryParams","queryString","parse","search","xtermRef","Terminal","screenReaderMode","handleTerminalResize","fit","dimensions","proposeDimensions","resizeRemoteTerminal","OPEN","send","handleSocketOpen","socket","e","self","keepAlive","readyState","setTimeout","onOpen","console","log","handleSocketClose","handleSocketError","createTerminal","protocol","window","socketURL","hostname","port","CONNECTING","onopen","this","onclose","onerror","loadAddon","AttachAddon","termClassName","termContainer","isReady","bounds","onResize","measureRef","ref","src","MesosImage","alt","mesosLogo","mesosLogoBackground","height","flexGrow","margin","position","left","right","marginLeft","top","width","zIndex","transition","duration","setDuration","username","setUsername","setToken","delegationURL","Dialog","DialogTitle","DialogContent","TextField","fullWidth","label","value","multiline","style","minWidth","InputLabelProps","shrink","DelegationForm","onDurationChange","target","onUsernameChange","DialogActions","Button","delegate_to","task_id","field","DialogContentText","InputProps","readOnly","type","onChange","FormControl","InputLabel","Select","labelId","MenuItem","Status","onAccessRequest","closable","match","useRouteMatch","termToken","setTermToken","context","setContext","Closed","setStatus","useTheme","delegationDialogOpen","setDelegationDialogOpen","accessRequestDialogOpen","setAccessRequestDialogOpen","qs","access_token","setAccessToken","config","setConfig","params","Loading","user","task","agent","agent_url","Unauthorized","Failed","retrieveConfig","Loaded","AccessRequestDialog","terminal","loader","CircularProgress","XTerm","statusBarContainer","statusBar","StatusBarItem","faUser","copy","faChevronRight","faServer","can_grant_access","padding","Link","brand","href","Paper","faGithub","default","paddingLeft","paddingRight","marginTop","useStatusBarItemStyles","setOpen","handleTooltipOpen","Tooltip","PopperProps","disablePortal","disableFocusListener","disableHoverListener","disableTouchListener","title","copyPointer","text","cursor","isDirectory","fd","mode","slice","setPath","files","setFiles","selectedFile","setSelectedFile","currentFd","setCurrentFd","isFile","length","loadingState","setLoadingState","fetchFiles","parentDir","split","join","fds","i","fileItems","map","f","Grid","item","lg","sm","xs","key","FileItem","stopPropagation","onDoubleClick","selected","breadCrumbRoot","pathname","restBreadCrumbItems","filter","x","link","handleDownloadClick","p","isDir","filename","pop","blob","saveAs","pathContainer","faSitemap","sitemapIcon","Breadcrumbs","concat","fileReader","FileReader","explorerContainer","preventDefault","container","grid","description","FileDescriptionBar","onDownloadClick","overflowY","borderBottom","textDecoration","minHeight","paddingBottom","borderTop","wordBreak","overflow","useFileItemStyles","elevation","content","faFolder","faFile","Typography","noWrap","border","userSelect","textAlign","useFileDescriptionBarStyles","toFixed","faFileDownload","setContent","useFileReaderStyles","readFile","newContent","objDiv","document","getElementById","scrollTop","scrollHeight","setInterval","clearInterval","textParts","items","formatText","toolbar","LeftToolbar","rightContainer","exact","TerminalView","SandboxView","to","maxWidth","maxHeight","borderRight","Helper","App","darkTheme","createMuiTheme","ThemeProvider","Provider","NotificationBar","MainView","Layout","Boolean","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5236ef21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mesos.3cf38049.png\";","module.exports = __webpack_public_path__ + \"static/media/helper.072f021d.png\";","import { Level } from \"../components/ColoredSnackbarContent\";\nimport { useCallback, createContext, useContext } from \"react\";\n\nexport interface Notification {\n    message: string;\n    level: Level;\n    timeout: number | undefined;\n}\n\nconst defaultOptions = {\n    timeout: 5,\n}\n\ninterface NotificationContextProps {\n    notification: Notification | null;\n    setNotification: (n: Notification | null) => void;\n}\n\nconst NotificationsContext = createContext<NotificationContextProps>(\n    { notification: null, setNotification: () => { } });\n\nexport default NotificationsContext;\n\n\nexport function useNotifications() {\n    let useNotificationsProps = useContext(NotificationsContext);\n\n    const notificationBuilder = (level: Level) => {\n        return (message: string, timeout?: number) => {\n            let targetTimeout: number | undefined = defaultOptions.timeout;\n            if (timeout === -1) {\n                targetTimeout = undefined;\n            } else {\n                targetTimeout = timeout;\n            }\n\n            useNotificationsProps.setNotification({\n                level, message,\n                timeout: targetTimeout,\n            });\n        }\n    }\n\n    const resetNotification = () => useNotificationsProps.setNotification(null);\n    const createInfoNotification = useCallback(notificationBuilder(\"info\"), []);\n    const createSuccessNotification = useCallback(notificationBuilder(\"success\"), []);\n    const createWarnNotification = useCallback(notificationBuilder(\"warning\"), []);\n    const createErrorNotification = useCallback(notificationBuilder(\"error\"), []);\n    const isActive = useNotificationsProps.notification !== null;\n\n\n    return {\n        notification: useNotificationsProps.notification,\n        resetNotification,\n        createInfoNotification,\n        createSuccessNotification,\n        createWarnNotification,\n        createErrorNotification,\n        isActive\n    }\n}","import React from \"react\";\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles, SnackbarContent } from \"@material-ui/core\";\nimport { amber, green } from '@material-ui/core/colors';\nimport classnames from \"classnames\";\nimport { SnackbarContentProps } from \"@material-ui/core/SnackbarContent\";\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst levelClassName = {\n    success: \"notification-success\",\n    warning: \"notification-warning\",\n    error: \"notification-error\",\n    info: \"notification-info\",\n}\n\nexport type Level = keyof typeof variantIcon;\n\nexport interface Props extends SnackbarContentProps {\n    className?: string;\n    level: Level;\n    message: string;\n}\n\nexport default function (props: Props) {\n    const classes = useStyles();\n    const Icon = variantIcon[props.level];\n\n    const { className, variant, message, ...others } = props;\n\n    return (\n        <SnackbarContent\n            className={classnames(classes[props.level], className, levelClassName[props.level])}\n            message={\n                <span className={classes.message}>\n                    <Icon className={classnames(classes.icon, classes.iconVariant)} />\n                    <span className=\"message-content\">{message}</span>\n                </span>\n            }\n            {...others} />\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n        color: \"white\",\n    },\n}))","import React, { useState, useEffect } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport ColoredSnackbarContent from \"./ColoredSnackbarContent\";\nimport { useNotifications, Notification } from \"../hooks/NotificationContext\";\n\nexport interface Props {\n    onClose: () => void;\n}\n\nexport default function (props: Props) {\n    const [tmpNotification, setTmpNotification] = useState(null as Notification | null);\n    const { notification } = useNotifications();\n\n    useEffect(() => {\n        if (notification && notification !== null) {\n            setTmpNotification(notification);\n        }\n    }, [notification]);\n\n    const shouldSnackbarBeOpen = notification !== undefined && notification !== null;\n\n    return (\n        <Snackbar\n            open={shouldSnackbarBeOpen}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            autoHideDuration={tmpNotification && tmpNotification.timeout ? tmpNotification.timeout * 1000 : undefined}\n            onClose={props.onClose}\n            onExited={() => setTmpNotification(null)}>\n            <ColoredSnackbarContent\n                className=\"notification\"\n                level={tmpNotification ? tmpNotification.level : \"info\"}\n                message={tmpNotification ? tmpNotification.message : \"\"} />\n        </Snackbar>\n    )\n}","import React from \"react\";\nimport { Fab, makeStyles } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTerminal, faFolderOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router\";\n\nexport interface Props {\n    taskID: string;\n}\n\nexport default function (props: Props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const handleTerminalClick = () => {\n        history.push(`/task/${props.taskID}/terminal`)\n    }\n\n    const handleSandboxClick = () => {\n        history.push(`/task/${props.taskID}/sandbox`)\n    }\n\n    return (\n        <div id=\"left-toolbar\" className={classes.root}>\n            <Fab size=\"medium\"\n                className={classes.button}\n                onClick={handleTerminalClick}>\n                <FontAwesomeIcon icon={faTerminal} />\n            </Fab>\n            <Fab size=\"medium\"\n                className={classes.button}\n                onClick={handleSandboxClick}>\n                <FontAwesomeIcon icon={faFolderOpen} />\n            </Fab>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        paddingTop: theme.spacing(2),\n    },\n    button: {\n        marginBottom: theme.spacing(),\n        backgroundColor: theme.palette.background.paper,\n        color: \"white\",\n    }\n}))","export class UnauthorizedAccessError extends Error {\n    constructor() {\n        super(\"Unauthorized access to container\");\n\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, UnauthorizedAccessError.prototype);\n    }\n}\n\nexport class TaskNotFoundError extends Error {\n    constructor() {\n        super(\"Task not found\");\n\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, TaskNotFoundError.prototype);\n    }\n}","import Axios from \"axios\";\nimport { UnauthorizedAccessError, TaskNotFoundError } from \"../errors\";\n\n\nexport interface CreateTerminalResponse {\n    master_url: string;\n    task: {\n        admins: string[];\n        agent_url: string;\n        container_id: string;\n        framework_id: string;\n        labels: { [key: string]: string };\n        slave_hostname: string\n        slave_id: string;\n        task_id: string;\n        user: string;\n    };\n    token: string;\n}\n\nexport async function postCreateTerminal(taskID: string, accessToken: string | null) {\n    let url = `/api/terminals/create/${taskID}`;\n    if (accessToken) {\n        url += `?access_token=${accessToken}`;\n    }\n    const res = await Axios.post<CreateTerminalResponse>(url, null, {\n        validateStatus: (code: number) => true,\n        withCredentials: true,\n    });\n\n    if (res.status === 404) {\n        throw new TaskNotFoundError();\n    }\n\n    if (res.status === 403) {\n        throw new UnauthorizedAccessError();\n    }\n\n    if (res.status !== 200) {\n        throw new Error(`Status code ${res.status} != 200`);\n    }\n    return res.data;\n}\n\nexport async function postResizeTerminal(token: string, rows: number, cols: number) {\n    const res = await Axios.post(`/api/terminals/resize?cols=${cols}&rows=${rows}&token=${token}`, null, {\n        withCredentials: true,\n    })\n\n    if (res.status !== 200) {\n        throw new Error(`Status code ${res.status} != 200`);\n    }\n}\n\ninterface GenerateDelegationRequest {\n    delegate_to: string;\n    task_id: string;\n    duration: string;\n}\n\ntype GenerateDelegationResponse = string;\n\nexport async function postGenerateDelegationToken(request: GenerateDelegationRequest) {\n    const res = await Axios.post<GenerateDelegationResponse>(`/api/delegate`, request, {\n        validateStatus: (code: number) => true\n    });\n\n    if (res.status !== 200) {\n        throw new Error(`Unexpected status ${res.status}`);\n    }\n\n    return res.data;\n}\n\nexport interface ConfigResponse {\n    can_grant_access: boolean;\n}\n\nexport async function getConfig() {\n    const res = await Axios.get<ConfigResponse>(`/api/config`, {\n        validateStatus: code => true,\n    });\n\n    if (res.status !== 200) {\n        throw new Error(`Unexpected status ${res.status}`);\n    }\n\n    return res.data;\n}\n\nexport interface FileDescription {\n    gid: string;\n    mode: string;\n    mtime: string,\n    path: string;\n    size: number;\n    uid: string;\n}\n\nexport async function browseSandbox(taskID: string, path: string) {\n    const res = await Axios.get<FileDescription[]>(`/api/sandbox/browse?taskID=${taskID}&path=${encodeURIComponent(path)}`);\n    return res.data;\n}\n\nexport interface FileData {\n    data: string;\n    offset: number;\n}\n\nexport async function readSandboxFile(taskID: string, path: string, offset: number, size: number) {\n    const res = await Axios.get<FileData>(`/api/sandbox/read?taskID=${taskID}&path=${encodeURIComponent(path)}&offset=${offset}&size=${size}`);\n    return res.data;\n}\n\nexport async function downloadSandboxFile(taskID: string, path: string, directory: boolean) {\n    const res = await Axios.get<string>(`/api/sandbox/download?taskID=${taskID}&path=${encodeURIComponent(path)}&directory=${directory}`, {\n        headers: {\n            'Accept': 'application/octet-stream',\n        },\n        responseType: 'blob',\n    });\n    return res.data;\n\n    // const res = await fetch(`/api/sandbox/download?taskID=${taskID}&path=${encodeURIComponent(path)}&directory=${directory}`)\n    // return res.blob()\n}","import React, { DependencyList } from \"react\";\n\nexport const useMemoizedCallback = <T extends (...args: any[]) => any>(callback: T, inputs: DependencyList) => {\n    // Instance var to hold the actual callback.\n    const callbackRef = React.useRef(callback);\n\n    // The memoized callback that won't change and calls the changed callbackRef.\n    const memoizedCallback = React.useCallback((...args) => {\n        return callbackRef.current(...args);\n    }, []);\n\n    // The callback that is constantly updated according to the inputs.\n    const updatedCallback = React.useCallback(callback, inputs);\n\n    // The effect updates the callbackRef depending on the inputs.\n    React.useEffect(() => {\n        callbackRef.current = updatedCallback;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, inputs);\n\n    // Return the memoized callback.\n    return memoizedCallback;\n};","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport classnames from \"classnames\";\nimport Measure from \"react-measure\";\n\nimport { Terminal } from 'xterm';\nimport \"xterm/css/xterm.css\";\n\nimport { AttachAddon } from 'xterm-addon-attach';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { postResizeTerminal } from \"../services/MesosTerm\";\nimport MesosImage from \"../assets/images/mesos.png\";\nimport { useNotifications } from \"../hooks/NotificationContext\";\nimport queryString from 'query-string';\nimport { useLocation } from \"react-router\";\nimport { useMemoizedCallback } from \"../hooks/MemoizedCallback\";\n\nexport interface Props extends React.DOMAttributes<{}> {\n    token: string | null;\n\n    onOpen: () => void;\n    onClose: () => void;\n}\n\ninterface Dimension {\n    rows: number;\n    cols: number;\n}\n\nexport default function (props: Props) {\n    const [isFocused,] = useState(false);\n    const terminalDivRef = useRef<HTMLDivElement>(null);\n    const timer = useRef<NodeJS.Timeout | null>(null);\n    const fitAddon = useRef<FitAddon>(new FitAddon());\n    const websocket = useRef<WebSocket | null>(null);\n    const classes = useStyles();\n    const [dimension, setDimension] = useState(null as Dimension | null);\n    const [websocketState, setWebsocketState] = useState(WebSocket.CLOSED);\n    const { createErrorNotification, createInfoNotification } = useNotifications();\n    const location = useLocation();\n    const queryParams = queryString.parse(location.search);\n    const xtermRef = useRef<Terminal>(new Terminal({ screenReaderMode: queryParams.screenReaderMode === \"true\" }));\n\n    const handleTerminalResize = async () => {\n        fitAddon.current.fit();\n        const dimensions = fitAddon.current.proposeDimensions();\n        if (dimensions) {\n            setDimension(dimensions);\n        }\n    }\n\n    const resizeRemoteTerminal = useCallback(async () => {\n        if (dimension === null || props.token === null) {\n            return;\n        }\n        await postResizeTerminal(props.token, dimension.rows, dimension.cols);\n        if (websocket.current && websocketState === WebSocket.OPEN) {\n            // Workaround: send a space and a backspace to update the length of the current line otherwise the\n            // the line is updated only when the user send new keys.\n            websocket.current.send(\" \\x1b[D\");\n        }\n    }, [dimension, props.token, websocketState]);\n\n    const handleSocketOpen = useMemoizedCallback((socket: WebSocket, e: Event) => {\n        const self = socket;\n        function keepAlive() {\n            var timeout = 2000;\n            if (self.readyState === self.OPEN) {\n                self.send('');\n            }\n            timer.current = setTimeout(keepAlive, timeout);\n        }\n        keepAlive();\n        setWebsocketState(WebSocket.OPEN);\n        props.onOpen();\n        console.log(\"Connection is open!\");\n    }, []);\n\n    const handleSocketClose = useMemoizedCallback((socket: WebSocket, e: Event) => {\n        setWebsocketState(WebSocket.CLOSED);\n        console.log(\"Connection has been closed.\");\n        createInfoNotification(\"Connection has been closed.\")\n        props.onClose();\n    }, []);\n\n    const handleSocketError = useMemoizedCallback((socket: WebSocket, e: Event) => {\n        setWebsocketState(-1);\n        console.log(\"Error raised by websocket.\", e);\n        createErrorNotification(\"Error raised by websocket.\");\n    }, []);\n\n\n    const createTerminal = useCallback(async () => {\n        if (props.token === null || terminalDivRef.current === null) {\n            return;\n        }\n        const protocol = (window.location.protocol === 'https:') ? 'wss://' : 'ws://';\n        const socketURL = protocol + window.location.hostname\n            + ((window.location.port) ? (':' + window.location.port) : '')\n            + '/api/terminals/ws?token=' + props.token;\n        websocket.current = new WebSocket(socketURL);\n        setWebsocketState(WebSocket.CONNECTING);\n\n        websocket.current.onopen = function (this, e) { handleSocketOpen(this, e) };\n        websocket.current.onclose = function (this, e) { handleSocketClose(this, e) };;\n        websocket.current.onerror = function (this, e) { handleSocketError(this, e) };;\n\n        xtermRef.current.loadAddon(fitAddon.current);\n        xtermRef.current.loadAddon(new AttachAddon(websocket.current));\n        xtermRef.current.open(terminalDivRef.current);\n        handleTerminalResize();\n    }, [props.token, handleSocketOpen, handleSocketClose, handleSocketError]);\n\n    useEffect(() => { resizeRemoteTerminal(); }, [resizeRemoteTerminal]);\n    useEffect(() => { createTerminal(); }, [createTerminal]);\n\n    const termClassName = classnames(isFocused ? 'xterm-focused' : null, classes.termContainer);\n    const isReady = websocketState === WebSocket.OPEN;\n\n    return (\n        <Measure bounds onResize={handleTerminalResize}>\n            {({ measureRef }) => (\n                <div className={classes.root} ref={measureRef}>\n                    <img src={MesosImage} alt=\"mesos logo\" className={classnames(classes.mesosLogo, isReady ? classes.mesosLogoBackground : \"\")} />\n                    <div ref={terminalDivRef} className={termClassName} id=\"terminal\" />\n                </div>\n            )}\n        </Measure>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: 'black',\n        height: \"100%\",\n    },\n    termContainer: {\n        flexGrow: 1,\n        margin: theme.spacing(),\n    },\n    mesosLogo: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        top: '350px',\n        width: '500px',\n        zIndex: 1,\n        opacity: 1,\n    },\n    mesosLogoBackground: {\n        transition: \"opacity 0.5s ease-in\",\n        opacity: 0.3,\n    }\n}))","import React, { useState, ChangeEvent, Fragment } from \"react\";\nimport {\n    DialogTitle, Dialog, DialogContent, DialogActions, Button,\n    TextField, DialogContentText, FormControl, InputLabel, Select, MenuItem, makeStyles\n} from \"@material-ui/core\";\nimport { postGenerateDelegationToken } from \"../services/MesosTerm\";\nimport { useNotifications } from \"../hooks/NotificationContext\";\nimport classnames from \"classnames\";\n\nexport interface Props {\n    open: boolean;\n    taskID: string;\n\n    onClose: () => void;\n}\n\nexport default function (props: Props) {\n    const [duration, setDuration] = useState(\"1h\");\n    const [username, setUsername] = useState(\"\");\n    const [token, setToken] = useState(\"\");\n    const { createErrorNotification } = useNotifications();\n\n    const handleClose = () => {\n        setToken(\"\");\n        props.onClose();\n    }\n\n    const handleGenerate = async () => {\n        if (username === \"\") {\n            createErrorNotification(\"Provide a username to delegate access to\");\n        }\n\n        try {\n            const token = await postGenerateDelegationToken({\n                delegate_to: username,\n                task_id: props.taskID,\n                duration: duration,\n            });\n            setToken(token);\n        } catch (err) {\n            createErrorNotification(err.message);\n        }\n    }\n\n    const handleDurationChange = (e: ChangeEvent<{ value: unknown }>) => {\n        setDuration(e.target.value as string);\n    }\n\n    const handleUsernameChange = (e: ChangeEvent<{ value: string }>) => {\n        setUsername(e.target.value);\n    }\n\n    const delegationURL = window.location.protocol + \"//\" + window.location.hostname\n        + ((window.location.port) ? (':' + window.location.port) : '')\n        + '/login/' + props.taskID + '?access_token=' + token;\n\n    return (\n        <Dialog open={props.open} id=\"delegation-dialog\">\n            <DialogTitle>\n                Access Delegation\n            </DialogTitle>\n            <DialogContent>\n                {token\n                    ? <TextField\n                        fullWidth\n                        label=\"Token\"\n                        value={delegationURL}\n                        className=\"token-field\"\n                        rows={8}\n                        multiline\n                        style={{ minWidth: \"500px\" }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}>\n                    </TextField>\n                    : <DelegationForm\n                        taskID={props.taskID}\n                        duration={duration}\n                        username={username}\n                        onDurationChange={handleDurationChange}\n                        onUsernameChange={handleUsernameChange} />}\n            </DialogContent>\n            <DialogActions>\n                {!token\n                    ? <Button onClick={handleGenerate} className=\"generate-button\">\n                        Generate\n                    </Button>\n                    : null}\n                <Button onClick={handleClose} className=\"close-button\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\ninterface DelegationFormProps {\n    taskID: string;\n    duration: string;\n    username: string;\n\n    onDurationChange: (e: ChangeEvent<{ value: unknown }>) => void;\n    onUsernameChange: (e: ChangeEvent<{ value: string }>) => void;\n}\n\nfunction DelegationForm(props: DelegationFormProps) {\n    const classes = makeStyles(theme => ({\n        field: {\n            marginBottom: theme.spacing(2),\n        }\n    }))();\n\n    return (\n        <Fragment>\n            <DialogContentText>\n                Generate a delegation token to grant access to the current container for a limited period of time.\n        </DialogContentText>\n            <TextField\n                fullWidth\n                InputProps={{\n                    readOnly: true,\n                }}\n                id=\"task_id\"\n                label=\"Task ID\"\n                value={props.taskID}\n                type=\"text\"\n                className={classnames(classes.field, \"taskid-field\")}>\n            </TextField>\n            <TextField\n                fullWidth\n                id=\"username\"\n                label={\"Username\"}\n                type=\"text\"\n                value={props.username}\n                className={classnames(classes.field, \"username-field\")}\n                onChange={props.onUsernameChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}>\n            </TextField>\n            <FormControl fullWidth className={classes.field}>\n                <InputLabel id=\"duration-label\">Duration</InputLabel>\n                <Select\n                    fullWidth\n                    labelId=\"duration-label\"\n                    id=\"duration-select\"\n                    className=\"duration-field\"\n                    value={props.duration}\n                    onChange={props.onDurationChange}\n                >\n                    <MenuItem value={\"1h\"}>1 hour</MenuItem>\n                    <MenuItem value={\"1d\"}>1 day</MenuItem>\n                    <MenuItem value={\"7d\"}>7 days</MenuItem>\n                    <MenuItem value={\"15d\"}>15 days</MenuItem>\n                </Select>\n            </FormControl>\n        </Fragment>\n    )\n}\n","import React, { useState } from \"react\";\nimport {\n    Dialog, DialogTitle, DialogContent, DialogContentText,\n    TextField, DialogActions, Button\n} from \"@material-ui/core\";\n\nexport interface Props {\n    open: boolean;\n    closable: boolean;\n\n    onClose: () => void;\n    onAccessRequest: (token: string) => void;\n}\n\nexport default function (props: Props) {\n    const [token, setToken] = useState(\"\");\n    const handleOK = () => {\n        props.onAccessRequest(token);\n    }\n\n    return (\n        <Dialog open={props.open} id=\"access-request-dialog\">\n            <DialogTitle>\n                Unauthorized Access\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter an access token provided by an administrator to get access to the container\n                </DialogContentText>\n                <TextField\n                    label=\"Access token\"\n                    value={token}\n                    onChange={e => setToken(e.target.value)}\n                    InputProps={{\n                        className: \"token-field\"\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    fullWidth>\n                </TextField>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleOK} className=\"ok-button\">\n                    OK\n                </Button>\n\n                {props.closable\n                    ? <Button onClick={props.onClose} className=\"close-button\">\n                        Close\n                    </Button>\n                    : null}\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, { useEffect, useState, useCallback } from \"react\";\nimport { makeStyles, Link, Paper, CircularProgress, Tooltip, useTheme, Button } from \"@material-ui/core\";\nimport XTerm from \"../components/XTerm\";\nimport { useRouteMatch, useLocation } from \"react-router\";\nimport { faUser, faChevronRight, faServer } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { postCreateTerminal, getConfig, ConfigResponse } from \"../services/MesosTerm\";\nimport classnames from \"classnames\";\nimport { useNotifications } from \"../hooks/NotificationContext\";\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport DelegationDialog from \"../components/DelegationFormDialog\";\nimport AccessRequestDialog from \"../components/AccessRequestDialog\";\nimport { UnauthorizedAccessError, TaskNotFoundError } from \"../errors\";\nimport queryString from \"query-string\";\n\n\ninterface Context {\n    user: string;\n    taskID: string;\n    agent: string;\n}\n\nenum Status {\n    Closed = 1,\n    Failed = 2,\n    Loaded = 3,\n    Loading = 4,\n    Unauthorized = 5,\n}\n\nexport default function () {\n    const classes = useStyles();\n    const match = useRouteMatch<{ taskID: string }>();\n    const [termToken, setTermToken] = useState(null as string | null);\n    const [context, setContext] = useState(null as Context | null);\n    const { createErrorNotification } = useNotifications();\n    const [status, setStatus] = useState(Status.Closed);\n    const theme = useTheme();\n    const [delegationDialogOpen, setDelegationDialogOpen] = useState(false);\n    const [accessRequestDialogOpen, setAccessRequestDialogOpen] = useState(false);\n    const location = useLocation();\n    const qs = queryString.parse(location.search);\n    const [accessToken, setAccessToken] = useState<string | null>(qs.access_token ? qs.access_token as string : null);\n    const [config, setConfig] = useState(null as ConfigResponse | null);\n\n    const taskID = match.params.taskID ? match.params.taskID : null;\n\n    const createTerminal = useCallback(async () => {\n        if (!taskID) {\n            return;\n        }\n        try {\n            setStatus(Status.Loading);\n            const res = await postCreateTerminal(taskID, accessToken);\n            setTermToken(res.token);\n            setContext({ user: res.task.user, taskID: taskID, agent: res.task.agent_url });\n        } catch (err) {\n            console.error(err);\n            if (err instanceof UnauthorizedAccessError) {\n                setStatus(Status.Unauthorized);\n                if (accessToken) {\n                    createErrorNotification(err.message);\n                }\n                return;\n            } else if (err instanceof TaskNotFoundError) {\n                setStatus(Status.Failed);\n                createErrorNotification(\"Task not found\");\n                return;\n            }\n            createErrorNotification(err.message, -1);\n            setStatus(Status.Failed);\n        }\n    }, [taskID, createErrorNotification, accessToken]);\n\n    const retrieveConfig = useCallback(async () => {\n        try {\n            const res = await getConfig();\n            setConfig(res);\n        } catch (err) {\n            createErrorNotification(`Unable to retrieve configuration: ${err.message}`);\n        }\n    }, [createErrorNotification]);\n\n    useEffect(() => { createTerminal() }, [createTerminal]);\n    useEffect(() => {\n        if (status === Status.Unauthorized) {\n            setAccessRequestDialogOpen(true);\n        } else if (status === Status.Loaded) {\n            setAccessRequestDialogOpen(false);\n        }\n    }, [status]);\n    useEffect(() => { retrieveConfig() }, [retrieveConfig]);\n\n    return (\n        <div className={classes.root}>\n            {taskID ? <DelegationDialog\n                open={delegationDialogOpen}\n                taskID={taskID}\n                onClose={() => setDelegationDialogOpen(false)} /> : null}\n            {taskID ? <AccessRequestDialog\n                open={accessRequestDialogOpen}\n                closable={status !== Status.Unauthorized}\n                onClose={() => setAccessRequestDialogOpen(false)}\n                onAccessRequest={setAccessToken} /> : null}\n            <div className={classes.terminal}>\n                <span className={classnames(classes.loader, status === Status.Loaded || status === Status.Failed || status === Status.Closed ? \"hidden\" : \"\")}>\n                    <CircularProgress size={128} />\n                </span>\n                <XTerm token={termToken} onOpen={() => { setStatus(Status.Loaded) }} onClose={() => { setStatus(Status.Closed) }} />\n            </div>\n            <div className={classes.statusBarContainer}>\n                <div className={classes.statusBar}>\n                    <StatusBarItem value={context ? context.user : \"_______\"} icon={faUser} copy className={\"user-item\"} />\n                    <StatusBarItem value={context ? context.taskID : \"____________________\"} icon={faChevronRight} copy />\n                    <StatusBarItem value={context ? context.agent : \"____________________\"} icon={faServer} copy />\n                    {config && config.can_grant_access && status === Status.Loaded\n                        ? <Button style={{ padding: theme.spacing(0.3) }}\n                            onClick={() => setDelegationDialogOpen(true)}\n                            className=\"grant-permission-button\">\n                            <div>Grant access</div>\n                        </Button>\n                        : null\n                    }\n                </div>\n                <Link className={classes.brand}\n                    href=\"https://github.com/clems4ever/mesos-term\"\n                    target=\"_blank\">\n                    <Paper>\n                        <FontAwesomeIcon icon={faGithub} />\n                        MesosTerm\n                    </Paper>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: theme.palette.background.default,\n    },\n    terminal: {\n        flexGrow: 1\n    },\n    statusBarContainer: {\n        width: '100%',\n        height: theme.spacing(4),\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        zIndex: 10,\n    },\n    statusBar: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        paddingLeft: theme.spacing(),\n        flexGrow: 1,\n    },\n    brand: {\n        marginRight: theme.spacing(),\n        padding: theme.spacing(0.3),\n        paddingLeft: theme.spacing(),\n        paddingRight: theme.spacing(),\n        background: theme.palette.background.paper\n    },\n    loader: {\n        zIndex: 3,\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        marginLeft: \"-64px\",\n        marginTop: \"-64px\",\n    }\n}))\n\n\ninterface StatusBarItemProps {\n    value: string;\n    icon: IconProp;\n    copy?: boolean;\n    className?: string;\n}\n\nexport function StatusBarItem(props: StatusBarItemProps) {\n    const classes = useStatusBarItemStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleTooltipOpen = () => {\n        setOpen(true);\n        setTimeout(() => setOpen(false), 1000);\n    };\n\n    if (!props.copy) {\n        return (\n            <div className={classnames(classes.root, props.className)} onClick={handleTooltipOpen}>\n                <FontAwesomeIcon icon={props.icon} className={classes.icon} />\n                {props.value}\n            </div>\n        )\n    }\n\n    return (\n        <Tooltip\n            PopperProps={{\n                disablePortal: true,\n            }}\n            open={open}\n            disableFocusListener\n            disableHoverListener\n            disableTouchListener\n            title=\"copied!\"\n        >\n            <div className={classnames(classes.root, props.className, props.copy ? classes.copyPointer : \"\")}\n                onClick={handleTooltipOpen}>\n                <CopyToClipboard text={props.value}>\n                    <div>\n                        <FontAwesomeIcon icon={props.icon} className={classes.icon} />\n                        {props.value}\n                    </div>\n                </CopyToClipboard>\n            </div>\n        </Tooltip >\n    )\n}\n\nconst useStatusBarItemStyles = makeStyles(theme => ({\n    root: {\n        marginRight: theme.spacing(3),\n    },\n    copyPointer: {\n        cursor: \"pointer\",\n    },\n    icon: {\n        marginRight: theme.spacing(),\n    }\n}))","import React, { useEffect, useState, useCallback, MouseEvent, Fragment, ReactNode, useRef } from \"react\";\nimport { browseSandbox, FileDescription, readSandboxFile, downloadSandboxFile } from \"../services/MesosTerm\";\nimport { useRouteMatch, useHistory, useLocation } from \"react-router\";\nimport { makeStyles, Grid, Paper, Typography, Breadcrumbs, Link, Tooltip, CircularProgress } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolder, faFile, faFileDownload, faSitemap } from \"@fortawesome/free-solid-svg-icons\";\nimport queryString from \"query-string\";\nimport classnames from \"classnames\";\nimport { useNotifications } from \"../hooks/NotificationContext\";\nimport { saveAs } from 'file-saver';\n\nfunction isDirectory(fd: FileDescription) {\n    return fd.mode.slice(0, 1) === 'd';\n}\n\nexport default function () {\n    const match = useRouteMatch<{ taskID: string }>();\n    const classes = useStyles();\n    const location = useLocation();\n    const qs = queryString.parse(location.search);\n    const [path, setPath] = useState(qs.path ? qs.path as string : '/');\n    const [files, setFiles] = useState(null as FileDescription[] | null);\n    const history = useHistory();\n    const [selectedFile, setSelectedFile] = useState(null as FileDescription | null);\n    const [currentFd, setCurrentFd] = useState(null as FileDescription | null);\n    const isFile = files && files.length === 0;\n    const [loadingState, setLoadingState] = useState(false);\n    const { createErrorNotification } = useNotifications();\n\n    const fetchFiles = useCallback(async () => {\n        try {\n            setLoadingState(true);\n            const files = await browseSandbox(match.params.taskID, path);\n\n            const parentDir = path.slice(1).split('/').slice(0, -1).join('/');\n            const fds = await browseSandbox(match.params.taskID, '/' + parentDir);\n            for (let i = 0; i < fds.length; i++) {\n                if (fds[i].path === path) {\n                    setCurrentFd(fds[i]);\n                    break;\n                }\n            }\n            setFiles(files);\n            setSelectedFile(null);\n        } catch (err) {\n            createErrorNotification(err.message);\n        } finally {\n            setLoadingState(false);\n        }\n    }, [path, match.params.taskID, setCurrentFd]);\n\n\n    useEffect(() => {\n        if (path !== qs.path) {\n            setPath(qs.path ? qs.path as string : '/');\n        }\n    }, [qs.path, setPath]);\n\n    useEffect(() => { fetchFiles() }, [fetchFiles]);\n\n    useEffect(() => { history.push(`/task/${match.params.taskID}/sandbox?path=${encodeURIComponent(path)}`) },\n        [history, path, match.params.taskID]);\n\n    const fileItems = files ? files.map((f, i) => {\n        const handleDoubleClick = (ev: MouseEvent<HTMLDivElement>, fd: FileDescription) => {\n            setPath(f.path);\n        }\n        const handleClick = (ev: MouseEvent<HTMLDivElement>, fd: FileDescription) => {\n            ev.stopPropagation();\n            setSelectedFile(fd);\n        }\n        return (\n            <Grid item lg={2} sm={3} xs={6}\n                key={`file-${i}`}>\n                <FileItem fd={f}\n                    onClick={e => handleClick(e, f)}\n                    onDoubleClick={e => handleDoubleClick(e, f)}\n                    selected={selectedFile !== null && f.path === selectedFile.path} />\n            </Grid>\n        );\n    }) : [];\n\n    let breadCrumbRoot = (\n        <Link href={`${location.pathname}?path=${encodeURIComponent('/')}`} key={`path-item-root`}>\n            Sandbox\n        </Link>\n    )\n\n    const restBreadCrumbItems = path.slice(1).split('/').filter(x => x !== '').map((x, i) => {\n        const link = path.split('/').slice(0, i + 2).join('/');\n        return (\n            <Link href={`${location.pathname}?path=${encodeURIComponent(link)}`} key={`path-item-${i}`}>\n                {x}\n            </Link>\n        )\n    });\n\n    const downloadFile = useCallback(async () => {\n        try {\n            let p: string;\n            let isDir: boolean;\n            if (selectedFile) {\n                p = selectedFile.path;\n                isDir = isDirectory(selectedFile);\n            } else if (currentFd) {\n                p = currentFd.path;\n                isDir = isDirectory(currentFd);\n            } else {\n                // This is the full sandbox.\n                isDir = true;\n                p = '/';\n            }\n            let filename = p.split('/').pop();\n            if (!filename) {\n                filename = match.params.taskID;\n            }\n            const blob = await downloadSandboxFile(match.params.taskID, p, isDir);\n            // const blob = new Blob([arr], { type: isDir ? 'application/zip' : 'octet/stream' });\n            saveAs(blob, filename + ((isDir) ? '.zip' : ''));\n        } catch (err) {\n            createErrorNotification(err.message);\n        }\n    }, [selectedFile, match.params.taskID, currentFd]);\n\n    const handleDownloadClick = downloadFile;\n\n    return (\n        <div className={classes.root}>\n            <div className={loadingState ? \"\" : \"hidden\"}>\n                <CircularProgress size={128} className={classnames(classes.loader)} />\n            </div>\n            <div className={classes.pathContainer}>\n                <FontAwesomeIcon icon={faSitemap} className={classes.sitemapIcon} />\n                <Breadcrumbs>\n                    {[breadCrumbRoot].concat(restBreadCrumbItems)}\n                </Breadcrumbs>\n            </div>\n            {isFile\n                ? <div className={classes.fileReader} id=\"file-reader\">\n                    <FileReader taskID={match.params.taskID} path={path} />\n                </div>\n                : <div className={classes.explorerContainer} onClick={e => { setSelectedFile(null); e.preventDefault() }}>\n                    <Grid container\n                        className={classes.grid}\n                        spacing={2}>\n                        {fileItems}\n                    </Grid>\n                </div>}\n            <div className={classes.description}>\n                <FileDescriptionBar fd={selectedFile ? selectedFile : currentFd} onDownloadClick={handleDownloadClick} />\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        height: \"100%\",\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.background.default,\n        position: 'relative',\n    },\n    loader: {\n        position: 'absolute',\n        left: 'calc(50% - 64px)',\n        top: 'calc(50% - 64px)'\n    },\n    explorerContainer: {\n        flexGrow: 1,\n        overflowY: \"scroll\",\n    },\n    pathContainer: {\n        padding: theme.spacing(),\n        borderBottom: '1px solid ' + theme.palette.background.default,\n        backgroundColor: theme.palette.background.paper,\n        '& a': {\n            textDecoration: 'none',\n            color: 'white',\n        },\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    sitemapIcon: {\n        marginRight: theme.spacing(),\n        marginLeft: theme.spacing(),\n        color: 'white',\n    },\n    grid: {\n        width: 'calc(100%)',\n        margin: 0,\n        padding: theme.spacing(),\n    },\n    description: {\n        minHeight: theme.spacing(2),\n        padding: theme.spacing(2),\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n        color: 'white',\n        backgroundColor: theme.palette.background.paper,\n        borderTop: '1px solid ' + theme.palette.background.default,\n    },\n    fileReader: {\n        wordBreak: 'break-all',\n        padding: theme.spacing(2),\n        backgroundColor: 'black',\n        height: '100%',\n        overflow: 'auto',\n    }\n}));\n\ninterface FileItemProps {\n    fd: FileDescription;\n    selected: boolean;\n\n    onClick: (e: MouseEvent<HTMLDivElement>, fd: FileDescription) => void;\n    onDoubleClick: (e: MouseEvent<HTMLDivElement>, fd: FileDescription) => void;\n}\n\nfunction FileItem(props: FileItemProps) {\n    const classes = useFileItemStyles();\n    const isDirectory = props.fd.mode.slice(0, 1) === 'd';\n    const filename = props.fd.path.split('/').pop();\n\n    return (\n        <Paper elevation={1}\n            onClick={e => props.onClick(e, props.fd)}\n            onDoubleClick={e => props.onDoubleClick(e, props.fd)}\n            className={classnames(classes.paper, props.selected ? classes.selected : '')}>\n            <div className={classes.content}>\n                <FontAwesomeIcon icon={isDirectory ? faFolder : faFile} size=\"3x\" />\n                <Typography noWrap className={classes.filename}>{filename}</Typography>\n            </div>\n        </Paper>\n    )\n}\n\nconst useFileItemStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        cursor: 'pointer',\n        border: '1px solid ' + theme.palette.background.default,\n        userSelect: 'none',\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n        alignItems: 'center',\n        color: '#b7b7b7',\n        overflow: 'hidden',\n    },\n    filename: {\n        width: '100%',\n        textAlign: \"center\",\n    },\n    selected: {\n        border: '1px solid #949494',\n    }\n}));\n\ninterface FileDescriptionBarProps {\n    fd: FileDescription | null;\n\n    onDownloadClick: () => void;\n}\n\nfunction FileDescriptionBar(props: FileDescriptionBarProps) {\n    const classes = useFileDescriptionBarStyles();\n    const filename = props.fd ? props.fd.path.split('/').pop() : '-';\n    const size = props.fd ? (props.fd.size / 1000).toFixed(2) : '-';\n    const mode = props.fd ? props.fd.mode : '-';\n    return (\n        <Fragment>\n            <Tooltip title=\"download\">\n                <span onClick={props.onDownloadClick}>\n                    <FontAwesomeIcon icon={faFileDownload} className={classes.icon} />\n                </span>\n            </Tooltip>\n            <span className={classes.item}>name: {filename}</span>{\" \"}\n            <span className={classes.item}>size: {size}kb</span>{\" \"}\n            <span className={classes.item}>mode: {mode}</span>\n        </Fragment>\n    )\n}\n\nconst useFileDescriptionBarStyles = makeStyles(theme => ({\n    item: {\n        marginRight: theme.spacing(2),\n    },\n    icon: {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginRight: theme.spacing(2),\n    }\n}));\n\ninterface FileReaderProps {\n    taskID: string;\n    path: string;\n}\n\nfunction formatText(content: string): ReactNode {\n    const textParts = content.split(\"\\n\");\n    const items = [] as ReactNode[];\n\n    for (let i = 0; i < textParts.length; i++) {\n        items.push(<span key={`content-part-${i}`}>{textParts[i]}</span>);\n        if (i !== textParts.length - 1) {\n            items.push(<br key={`content-space-${i}`} />);\n        }\n    }\n    return <p style={{ margin: 0, padding: 0 }}>{items}</p>;\n}\n\nfunction FileReader(props: FileReaderProps) {\n    const [content, setContent] = useState(\"\");\n    const classes = useFileReaderStyles();\n    const timer = useRef<NodeJS.Timeout | null>();\n\n    const readFile = useCallback(async () => {\n        const newContent = await readSandboxFile(props.taskID, props.path, content.length, 50000);\n        if (newContent.data !== '') {\n            setContent(content + newContent.data);\n\n            // Keep the cursor at the end of the file.\n            var objDiv = document.getElementById(\"file-reader\") as HTMLDivElement | null;\n            if (objDiv) {\n                objDiv.scrollTop = objDiv.scrollHeight;\n            }\n        }\n    }, [props.path, props.taskID, setContent, content]);\n\n    useEffect(() => {\n        readFile();\n        timer.current = setInterval(readFile, 1000);\n        return () => {\n            if (timer.current) {\n                clearInterval(timer.current);\n            }\n        }\n    }, [readFile]);\n\n\n    return (\n        <div className={classes.root}>\n            {formatText(content)}\n        </div>\n    )\n}\n\nconst useFileReaderStyles = makeStyles(theme => ({\n    root: {\n        color: '#b7b7b7',\n    }\n}))","import React from \"react\";\nimport LeftToolbar from \"./components/LeftToolbar\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Route, Redirect, Switch, useRouteMatch } from \"react-router\";\nimport TerminalView from \"./views/TerminalView\";\nimport SandboxView from \"./views/SandboxView\";\n\nexport default function () {\n    const classes = useStyles();\n    const match = useRouteMatch<{ taskID: string }>();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.toolbar}>\n                <LeftToolbar taskID={match.params.taskID} />\n            </div>\n            <div className={classes.rightContainer}>\n                <div className={classes.container}>\n                    <Switch>\n                        <Route path=\"/task/:taskID/terminal\" exact={true}>\n                            <TerminalView />\n                        </Route>\n                        <Route path=\"/task/:taskID/sandbox\" exact={true}>\n                            <SandboxView />\n                        </Route>\n                        <Route path=\"/task/:taskID\">\n                            <Redirect to={`/task/${match.params.taskID}/terminal`} />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: `100vw`,\n        maxHeight: `100vh`,\n        width: `100vw`,\n        height: `100vh`,\n        display: \"flex\",\n        flexDirection: \"row\",\n        overflow: 'hidden',\n    },\n    toolbar: {\n        minWidth: theme.spacing(8),\n        height: '100%',\n        backgroundColor: theme.palette.background.default,\n        borderRight: \"1px solid #565656\",\n    },\n    rightContainer: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexDirection: 'column',\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    container: {\n        height: '100%',\n        width: '100%',\n    }\n}))","import React, { Fragment } from \"react\";\nimport Helper from \"../assets/images/helper.png\";\n\nexport default function () {\n    return (\n        <Fragment>\n            <p>Please provide a task ID as shown in the image.</p>\n            <img src={Helper} alt=\"url with task id\"></img>\n        </Fragment>\n    )\n}","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport NotificationsContext, { Notification } from './hooks/NotificationContext';\nimport NotificationBar from './components/NotificationBar';\nimport Layout from './Layout';\nimport MainView from './views/MainView';\n\nconst App: React.FC = () => {\n  const [notification, setNotification] = useState(null as Notification | null);\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <NotificationsContext.Provider value={{ notification, setNotification }} >\n        <NotificationBar onClose={() => setNotification(null)} />\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <MainView />\n            </Route>\n            <Route path=\"/task/:taskID\">\n              <Layout />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </Router>\n      </NotificationsContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}